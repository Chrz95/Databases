CREATE OR REPLACE FUNCTION public.grade_input_1_2()
  RETURNS void AS
$BODY$ 
BEGIN

	UPDATE "Register"
	SET 	lab_grade = CASE WHEN(A.lab_hours =0)
				THEN NULL
				ELSE floor(random() * (9 + 1))+1 
				END
	
	FROM (SELECT  DISTINCT r.serial_number, c.lab_hours
		FROM "Register" r, "CourseRun" cr, "Course" c, "Semester" s
		WHERE r.serial_number = cr.serial_number AND
		cr.semester_id = s.semester_id AND
		cr.course_code = c.course_code AND 
		s.semester_status = 'present') A
	WHERE "Register".serial_number = A.serial_number AND "Register".lab_grade is null AND "Register".register_status = 'approved';
	
	UPDATE "Register"
	SET	exam_grade = CASE WHEN ("Register".lab_grade < A.lab_min) then 0
				ELSE  floor(random() * (9 + 1))+1
				END
	FROM (SELECT  DISTINCT r.serial_number, cr.lab_min
		FROM "Register" r, "CourseRun" cr, "Course" c, "Semester" s
		WHERE r.serial_number = cr.serial_number AND
		cr.semester_id = s.semester_id AND
		cr.course_code = c.course_code AND 
		s.semester_status = 'present') A
	WHERE "Register".serial_number = A.serial_number AND "Register".exam_grade is null AND "Register".register_status = 'approved';
	
END;
$BODY$
  LANGUAGE plpgsql VOLATILE